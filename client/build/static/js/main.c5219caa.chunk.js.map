{"version":3,"sources":["components/Landing.jsx","components/Navbar.jsx","App.js","reportWebVitals.js","redux/reducers/index.js","redux/store/index.js","index.js"],"names":["Landing","Navbar","App","path","element","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","country","activity","store","createStore","state","action","type","payload","composeWithDevTools","applyMiddleware","thunk","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"8QAaeA,EAXC,WACd,OACE,8BACI,gCACI,yEACA,oDCQGC,EAbA,WACb,OACE,8BACE,gCACE,6CACA,0CAEA,2D,mDCeOC,MAff,WACE,OACE,eAAC,IAAD,WACE,cAAC,EAAD,IAEA,eAAC,IAAD,WACE,cAAC,IAAD,CAAOC,KAAK,IAAIC,QAAS,cAAC,EAAD,MACzB,cAAC,IAAD,CAAOD,KAAK,QAAQC,QAAS,cAAC,IAAD,MAC7B,cAAC,IAAD,CAAOD,KAAK,eAAeC,QAAS,cAAC,IAAD,MACpC,cAAC,IAAD,CAAOD,KAAK,YAAYC,QAAS,cAAC,IAAD,aCN1BC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,O,8BCPRQ,EAAe,CACnBC,QAAS,GACTC,SAAU,ICICC,EAAQC,uBDDM,WAAmC,IAAlCC,EAAiC,uDAAzBL,EAAcM,EAAW,uCAC3D,MACO,kBADCA,EAAOC,KAEJ,2BACFF,GADL,IAEEJ,QAASK,EAAOE,UAIXH,ICNXI,8BAAoBC,0BAAgBC,O,QCAtCC,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,IAAD,CAAUX,MAAOA,EAAjB,SACE,cAAC,EAAD,QAGJY,SAASC,eAAe,SAM1BzB,M","file":"static/js/main.c5219caa.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nconst Landing = () => {\r\n  return (\r\n    <div>\r\n        <div>\r\n            <h1>Si te interesa viajar. Este es tu lugar</h1>\r\n            <button>Ingresar</button>\r\n        </div>\r\n    </div>\r\n  )\r\n};\r\n\r\nexport default Landing;","import React from \"react\";\r\n\r\nconst Navbar = () => {\r\n  return (\r\n    <div>\r\n      <div>\r\n        <button>Landing</button>\r\n        <button>Home</button>\r\n\r\n        <button>Create Activity</button>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","import { Router, Routes, Route } from \"react-router-dom\";\nimport \"./App.css\";\n\nimport Landing from \"./components/Landing\";\nimport Navbar from \"./components/Navbar\";\nimport Home from \"./components/Home\";\nimport CreateActivity from \"./components/CreateActivity\";\nimport Details from \"./components/Details\";\n\nfunction App() {\n  return (\n    <Router>\n      <Navbar />\n\n      <Routes>\n        <Route path=\"/\" element={<Landing />} />\n        <Route path=\"/home\" element={<Home />} />\n        <Route path=\"/home/create\" element={<CreateActivity />} />\n        <Route path=\"/home/:id\" element={<Details />} />\n      </Routes>\n    </Router>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","const initialState = {\r\n  country: [],\r\n  activity: [],\r\n};\r\n\r\nexport const rootReducer = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case \"GET_COUNTRIES\":\r\n      return {\r\n        ...state,\r\n        country: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { createStore, applyMiddleware } from \"redux\";\r\nimport { composeWithDevTools } from \"redux-devtools-extension\";\r\nimport thunk from \"redux-thunk\";\r\n\r\nimport { rootReducer } from \"../reducers\";\r\n\r\nexport const store = createStore(\r\n  rootReducer,\r\n  composeWithDevTools(applyMiddleware(thunk))\r\n);\r\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport reportWebVitals from \"./reportWebVitals\";\nimport { store } from \"./redux/store\";\nimport{ Provider }from \"react-redux\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Provider store={store}>\n      <App />\n    </Provider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}